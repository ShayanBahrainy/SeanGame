/*! For license information please see multiplayer.js.LICENSE.txt */
(()=>{function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(){"use strict";t=function(){return n};var r,n={},o=Object.prototype,i=o.hasOwnProperty,a=Object.defineProperty||function(e,t,r){e[t]=r.value},s="function"==typeof Symbol?Symbol:{},c=s.iterator||"@@iterator",u=s.asyncIterator||"@@asyncIterator",l=s.toStringTag||"@@toStringTag";function h(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{h({},"")}catch(r){h=function(e,t,r){return e[t]=r}}function f(e,t,r,n){var o=t&&t.prototype instanceof w?t:w,i=Object.create(o.prototype),s=new _(n||[]);return a(i,"_invoke",{value:O(e,r,s)}),i}function p(e,t,r){try{return{type:"normal",arg:e.call(t,r)}}catch(e){return{type:"throw",arg:e}}}n.wrap=f;var v="suspendedStart",y="suspendedYield",d="executing",m="completed",g={};function w(){}function x(){}function b(){}var k={};h(k,c,(function(){return this}));var L=Object.getPrototypeOf,E=L&&L(L(B([])));E&&E!==o&&i.call(E,c)&&(k=E);var S=b.prototype=w.prototype=Object.create(k);function P(e){["next","throw","return"].forEach((function(t){h(e,t,(function(e){return this._invoke(t,e)}))}))}function T(t,r){function n(o,a,s,c){var u=p(t[o],t,a);if("throw"!==u.type){var l=u.arg,h=l.value;return h&&"object"==e(h)&&i.call(h,"__await")?r.resolve(h.__await).then((function(e){n("next",e,s,c)}),(function(e){n("throw",e,s,c)})):r.resolve(h).then((function(e){l.value=e,s(l)}),(function(e){return n("throw",e,s,c)}))}c(u.arg)}var o;a(this,"_invoke",{value:function(e,t){function i(){return new r((function(r,o){n(e,t,r,o)}))}return o=o?o.then(i,i):i()}})}function O(e,t,n){var o=v;return function(i,a){if(o===d)throw Error("Generator is already running");if(o===m){if("throw"===i)throw a;return{value:r,done:!0}}for(n.method=i,n.arg=a;;){var s=n.delegate;if(s){var c=C(s,n);if(c){if(c===g)continue;return c}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(o===v)throw o=m,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);o=d;var u=p(e,t,n);if("normal"===u.type){if(o=n.done?m:y,u.arg===g)continue;return{value:u.arg,done:n.done}}"throw"===u.type&&(o=m,n.method="throw",n.arg=u.arg)}}}function C(e,t){var n=t.method,o=e.iterator[n];if(o===r)return t.delegate=null,"throw"===n&&e.iterator.return&&(t.method="return",t.arg=r,C(e,t),"throw"===t.method)||"return"!==n&&(t.method="throw",t.arg=new TypeError("The iterator does not provide a '"+n+"' method")),g;var i=p(o,e.iterator,t.arg);if("throw"===i.type)return t.method="throw",t.arg=i.arg,t.delegate=null,g;var a=i.arg;return a?a.done?(t[e.resultName]=a.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=r),t.delegate=null,g):a:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,g)}function j(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function N(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function _(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(j,this),this.reset(!0)}function B(t){if(t||""===t){var n=t[c];if(n)return n.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var o=-1,a=function e(){for(;++o<t.length;)if(i.call(t,o))return e.value=t[o],e.done=!1,e;return e.value=r,e.done=!0,e};return a.next=a}}throw new TypeError(e(t)+" is not iterable")}return x.prototype=b,a(S,"constructor",{value:b,configurable:!0}),a(b,"constructor",{value:x,configurable:!0}),x.displayName=h(b,l,"GeneratorFunction"),n.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===x||"GeneratorFunction"===(t.displayName||t.name))},n.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,b):(e.__proto__=b,h(e,l,"GeneratorFunction")),e.prototype=Object.create(S),e},n.awrap=function(e){return{__await:e}},P(T.prototype),h(T.prototype,u,(function(){return this})),n.AsyncIterator=T,n.async=function(e,t,r,o,i){void 0===i&&(i=Promise);var a=new T(f(e,t,r,o),i);return n.isGeneratorFunction(t)?a:a.next().then((function(e){return e.done?e.value:a.next()}))},P(S),h(S,l,"Generator"),h(S,c,(function(){return this})),h(S,"toString",(function(){return"[object Generator]"})),n.keys=function(e){var t=Object(e),r=[];for(var n in t)r.push(n);return r.reverse(),function e(){for(;r.length;){var n=r.pop();if(n in t)return e.value=n,e.done=!1,e}return e.done=!0,e}},n.values=B,_.prototype={constructor:_,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=r,this.done=!1,this.delegate=null,this.method="next",this.arg=r,this.tryEntries.forEach(N),!e)for(var t in this)"t"===t.charAt(0)&&i.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=r)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function n(n,o){return s.type="throw",s.arg=e,t.next=n,o&&(t.method="next",t.arg=r),!!o}for(var o=this.tryEntries.length-1;o>=0;--o){var a=this.tryEntries[o],s=a.completion;if("root"===a.tryLoc)return n("end");if(a.tryLoc<=this.prev){var c=i.call(a,"catchLoc"),u=i.call(a,"finallyLoc");if(c&&u){if(this.prev<a.catchLoc)return n(a.catchLoc,!0);if(this.prev<a.finallyLoc)return n(a.finallyLoc)}else if(c){if(this.prev<a.catchLoc)return n(a.catchLoc,!0)}else{if(!u)throw Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return n(a.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var n=this.tryEntries[r];if(n.tryLoc<=this.prev&&i.call(n,"finallyLoc")&&this.prev<n.finallyLoc){var o=n;break}}o&&("break"===e||"continue"===e)&&o.tryLoc<=t&&t<=o.finallyLoc&&(o=null);var a=o?o.completion:{};return a.type=e,a.arg=t,o?(this.method="next",this.next=o.finallyLoc,g):this.complete(a)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),g},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),N(r),g}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if("throw"===n.type){var o=n.arg;N(r)}return o}}throw Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:B(e),resultName:t,nextLoc:n},"next"===this.method&&(this.arg=r),g}},n}function r(e,t,r,n,o,i,a){try{var s=e[i](a),c=s.value}catch(e){return void r(e)}s.done?t(c):Promise.resolve(c).then(n,o)}function n(e){return function(){var t=this,n=arguments;return new Promise((function(o,i){var a=e.apply(t,n);function s(e){r(a,o,i,s,c,"next",e)}function c(e){r(a,o,i,s,c,"throw",e)}s(void 0)}))}}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,s(n.key),n)}}function a(e,t,r){return t&&i(e.prototype,t),r&&i(e,r),Object.defineProperty(e,"prototype",{writable:!1}),e}function s(t){var r=function(t,r){if("object"!=e(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,r||"default");if("object"!=e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==e(r)?r:r+""}var c,u=function(){return a((function e(t){o(this,e),t&&chrome.storage.local.clear()}),[{key:"getSelectedHat",value:(p=n(t().mark((function e(){var r;return t().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,chrome.storage.local.get();case 2:if(!(r=e.sent).hat){e.next=5;break}return e.abrupt("return",r.hat);case 5:return e.abrupt("return",null);case 6:case"end":return e.stop()}}),e)}))),function(){return p.apply(this,arguments)})},{key:"getBling",value:(f=n(t().mark((function e(){var r;return t().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,chrome.storage.local.get();case 2:if(!(r=e.sent).bling){e.next=6;break}return r.bling=parseInt(r.bling),e.abrupt("return",r.bling);case 6:return e.abrupt("return",0);case 7:case"end":return e.stop()}}),e)}))),function(){return f.apply(this,arguments)})},{key:"getPlayerHealth",value:(h=n(t().mark((function e(){var r;return t().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,chrome.storage.local.get();case 2:if(!(r=e.sent).PlayerHealth){e.next=7;break}return e.abrupt("return",r.PlayerHealth);case 7:return e.abrupt("return",250);case 8:case"end":return e.stop()}}),e)}))),function(){return h.apply(this,arguments)})},{key:"addBling",value:(l=n(t().mark((function e(r){var n;return t().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,chrome.storage.local.get();case 2:return(n=e.sent).bling?(n.bling=parseInt(n.bling),n.bling+=r):n.bling=r,e.next=6,chrome.storage.local.set(n);case 6:case"end":return e.stop()}}),e)}))),function(e){return l.apply(this,arguments)})},{key:"getPlayerBullet",value:(u=n(t().mark((function e(){var r;return t().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,chrome.storage.local.get();case 2:if(!(r=e.sent).PlayerBullet){e.next=5;break}return e.abrupt("return",r.PlayerBullet);case 5:return r.PlayerBullet=1,e.next=8,chrome.storage.local.set(r);case 8:return e.abrupt("return",1);case 9:case"end":return e.stop()}}),e)}))),function(){return u.apply(this,arguments)})},{key:"getSeanBullet",value:(c=n(t().mark((function e(){var r;return t().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,chrome.storage.local.get();case 2:if(!(r=e.sent).SeanBullet){e.next=5;break}return e.abrupt("return",r.SeanBullet);case 5:return r.SeanBullet=1,e.next=8,chrome.storage.local.set(r);case 8:return e.abrupt("return",1);case 9:case"end":return e.stop()}}),e)}))),function(){return c.apply(this,arguments)})},{key:"getSeanStatus",value:(s=n(t().mark((function e(){return t().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,chrome.storage.local.get();case 2:if(!e.sent.HireSean){e.next=5;break}return e.abrupt("return",!0);case 5:return e.abrupt("return",!1);case 6:case"end":return e.stop()}}),e)}))),function(){return s.apply(this,arguments)})},{key:"subtractBling",value:(i=n(t().mark((function e(r){var n;return t().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,chrome.storage.local.get();case 2:if((n=e.sent).bling&&!(n.bling<r)){e.next=5;break}return e.abrupt("return",!1);case 5:return n.bling-=r,e.next=8,chrome.storage.local.set(n);case 8:return e.abrupt("return",!0);case 9:case"end":return e.stop()}}),e)}))),function(e){return i.apply(this,arguments)})},{key:"handleLevel",value:(r=n(t().mark((function e(r){var n;return t().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,chrome.storage.local.get();case 2:if((n=e.sent).level){e.next=5;break}return e.abrupt("return",!1);case 5:if(!(n.level<r)){e.next=7;break}return e.abrupt("return",!1);case 7:return e.abrupt("return",!0);case 8:case"end":return e.stop()}}),e)}))),function(e){return r.apply(this,arguments)})},{key:"handleAdView",value:(e=n(t().mark((function e(){var r,n,o;return t().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,chrome.storage.local.get();case 2:return(r=e.sent).rewardreset||(r.rewardreset=Date.now(),r.reward=260),(n=new Date).setTime(r.rewardreset),(o=new Date).setTime(Date.now()),n.getUTCDate()==o.getUTCDate()&&n.getUTCMonth()==o.getUTCMonth()||(r.rewardreset=Date.now(),r.reward=260),r.reward>10&&(r.reward-=10),e.next=12,chrome.storage.local.set(r);case 12:return e.next=14,this.addBling(parseInt(r.reward)+10);case 14:case"end":return e.stop()}}),e,this)}))),function(){return e.apply(this,arguments)})}]);var e,r,i,s,c,u,l,h,f,p}(),l=function(){function e(t,r,n,i){o(this,e),this.server=t,this.width=n,this.height=i,this.canvas=r,this.checkinterval=setInterval(this.checkConnection,100,this),this.keys=[],this.mousex=0,this.mousestate=!1,this.mousey=0,this.statustext="Connecting...",this.connection=new WebSocket(this.server),this.connection.addEventListener("close",this),this.connection.addEventListener("message",this),this.connection.addEventListener("open",this),this.connection.addEventListener("error",this),document.addEventListener("mousemove",this),document.addEventListener("pointerdown",this),document.addEventListener("pointerup",this),document.addEventListener("keydown",this),document.addEventListener("keyup",this)}return a(e,[{key:"socketClose",value:function(e){clearInterval(this.tick),clearInterval(this.checkinterval),this.clearListeners(),e||(this.statustext="Disconnected :(")}},{key:"checkConnection",value:function(){if(self.connection){var e=(new Date).getTime();self.connection.readyState>WebSocket.CONNECTING&&e-self.lastMessage>3e3&&(self.connection.close(),self.socketClose())}}},{key:"clearListeners",value:function(){document.removeEventListener("mousemove",this),document.removeEventListener("pointerdown",this),document.removeEventListener("pointerup",this),document.removeEventListener("keydown",this),document.removeEventListener("keyup",this)}},{key:"draw",value:function(e){var t=this.canvas.getContext("2d");for(var r in t.clearRect(0,0,this.width,this.height),e){var n=e[r];if("text"==n.type&&(t.font="18px Times New Roman",t.textAlign="center",t.textBaseline="middle",t.fillStyle="#8aea92",t.fillText(n.text,n.x,n.y)),t.fillStyle=n.fillStyle,"rectangle"==n.type&&t.fillRect(n.x,n.y,n.width,n.height),"circle"==n.type&&(t.beginPath(),t.arc(n.x,n.y,n.radius,0,360,!1),t.closePath(),t.fill()),"texture"==n.shape){var o=new Image(n.width,n.height);o.src=n.texture,t.drawImage(o,n.x,n.y)}}}},{key:"statustext",set:function(e){this._statustext=e;var t=this.canvas.getContext("2d");t.clearRect(0,0,this.width,this.height),t.font="18px Times New Roman",t.textAlign="center",t.textBaseline="middle",t.fillStyle="#8aea92",t.fillText(e,this.width/2,this.height/2)}},{key:"reconnect",value:function(t){c=new e(t.server,t.canvas,t.width,t.height)}},{key:"recieveUpdate",value:function(e){"frame"==e.type&&this.draw(e.data),"kick"==e.type&&(this.statustext=e.reason,this.clearListeners()),"reconnect"==e.type&&(setTimeout(this.reconnect,e.time,this),this.socketClose(!0),this.connection.close(),this.connection.removeEventListener("close",this),this.connection.removeEventListener("message",this),this.connection.removeEventListener("open",this),this.connection.removeEventListener("error",this),this.statustext="Reconnecting...")}},{key:"handleEvent",value:function(e){if("pointerdown"==e.type&&(this.mousestate=!0),"pointerup"==e.type&&(this.mousestate=!1),"mousemove"==e.type){var t=this.canvas.getBoundingClientRect();this.mousex=e.clientX-t.left,this.mousey=e.clientY-t.top}if("message"==e.type&&(this.recieveUpdate(JSON.parse(e.data)),this.lastMessage=(new Date).getTime()),"open"==e.type&&(this.statustext="",this.tick=setInterval(this.sendUpdate,1e3/60,this)),"close"==e.type&&this.socketClose(),"error"==e.type&&this.socketClose(),"keydown"==e.type&&-1==this.keys.indexOf(e.key)&&this.keys.push(e.key),"keyup"==e.type){var r=this.keys.indexOf(e.key);r>-1&&this.keys.splice(r,1)}}},{key:"sendUpdate",value:function(e){var t={Keys:e.keys,MousePos:{X:e.mousex,Y:e.mousey},MouseState:e.mousestate};e.connection.send(JSON.stringify(t))}}])}();window.addEventListener("load",(function(){chrome.action.setPopup({popup:"popup.html"}),new u(!1);var e=document.createElement("canvas");e.id="canvas",document.body.appendChild(e),e.width=400,e.height=300,c=new l("ws://127.0.0.1:690",e,400,300),this.window.networkingclient=c}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,