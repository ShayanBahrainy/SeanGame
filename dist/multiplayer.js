/*! For license information please see multiplayer.js.LICENSE.txt */
(()=>{function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(){"use strict";t=function(){return n};var r,n={},o=Object.prototype,i=o.hasOwnProperty,a=Object.defineProperty||function(e,t,r){e[t]=r.value},s="function"==typeof Symbol?Symbol:{},c=s.iterator||"@@iterator",u=s.asyncIterator||"@@asyncIterator",l=s.toStringTag||"@@toStringTag";function h(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{h({},"")}catch(r){h=function(e,t,r){return e[t]=r}}function f(e,t,r,n){var o=t&&t.prototype instanceof w?t:w,i=Object.create(o.prototype),s=new B(n||[]);return a(i,"_invoke",{value:O(e,r,s)}),i}function p(e,t,r){try{return{type:"normal",arg:e.call(t,r)}}catch(e){return{type:"throw",arg:e}}}n.wrap=f;var v="suspendedStart",y="suspendedYield",d="executing",m="completed",g={};function w(){}function x(){}function b(){}var k={};h(k,c,(function(){return this}));var L=Object.getPrototypeOf,E=L&&L(L(N([])));E&&E!==o&&i.call(E,c)&&(k=E);var S=b.prototype=w.prototype=Object.create(k);function P(e){["next","throw","return"].forEach((function(t){h(e,t,(function(e){return this._invoke(t,e)}))}))}function T(t,r){function n(o,a,s,c){var u=p(t[o],t,a);if("throw"!==u.type){var l=u.arg,h=l.value;return h&&"object"==e(h)&&i.call(h,"__await")?r.resolve(h.__await).then((function(e){n("next",e,s,c)}),(function(e){n("throw",e,s,c)})):r.resolve(h).then((function(e){l.value=e,s(l)}),(function(e){return n("throw",e,s,c)}))}c(u.arg)}var o;a(this,"_invoke",{value:function(e,t){function i(){return new r((function(r,o){n(e,t,r,o)}))}return o=o?o.then(i,i):i()}})}function O(e,t,n){var o=v;return function(i,a){if(o===d)throw Error("Generator is already running");if(o===m){if("throw"===i)throw a;return{value:r,done:!0}}for(n.method=i,n.arg=a;;){var s=n.delegate;if(s){var c=C(s,n);if(c){if(c===g)continue;return c}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(o===v)throw o=m,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);o=d;var u=p(e,t,n);if("normal"===u.type){if(o=n.done?m:y,u.arg===g)continue;return{value:u.arg,done:n.done}}"throw"===u.type&&(o=m,n.method="throw",n.arg=u.arg)}}}function C(e,t){var n=t.method,o=e.iterator[n];if(o===r)return t.delegate=null,"throw"===n&&e.iterator.return&&(t.method="return",t.arg=r,C(e,t),"throw"===t.method)||"return"!==n&&(t.method="throw",t.arg=new TypeError("The iterator does not provide a '"+n+"' method")),g;var i=p(o,e.iterator,t.arg);if("throw"===i.type)return t.method="throw",t.arg=i.arg,t.delegate=null,g;var a=i.arg;return a?a.done?(t[e.resultName]=a.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=r),t.delegate=null,g):a:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,g)}function j(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function _(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function B(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(j,this),this.reset(!0)}function N(t){if(t||""===t){var n=t[c];if(n)return n.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var o=-1,a=function e(){for(;++o<t.length;)if(i.call(t,o))return e.value=t[o],e.done=!1,e;return e.value=r,e.done=!0,e};return a.next=a}}throw new TypeError(e(t)+" is not iterable")}return x.prototype=b,a(S,"constructor",{value:b,configurable:!0}),a(b,"constructor",{value:x,configurable:!0}),x.displayName=h(b,l,"GeneratorFunction"),n.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===x||"GeneratorFunction"===(t.displayName||t.name))},n.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,b):(e.__proto__=b,h(e,l,"GeneratorFunction")),e.prototype=Object.create(S),e},n.awrap=function(e){return{__await:e}},P(T.prototype),h(T.prototype,u,(function(){return this})),n.AsyncIterator=T,n.async=function(e,t,r,o,i){void 0===i&&(i=Promise);var a=new T(f(e,t,r,o),i);return n.isGeneratorFunction(t)?a:a.next().then((function(e){return e.done?e.value:a.next()}))},P(S),h(S,l,"Generator"),h(S,c,(function(){return this})),h(S,"toString",(function(){return"[object Generator]"})),n.keys=function(e){var t=Object(e),r=[];for(var n in t)r.push(n);return r.reverse(),function e(){for(;r.length;){var n=r.pop();if(n in t)return e.value=n,e.done=!1,e}return e.done=!0,e}},n.values=N,B.prototype={constructor:B,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=r,this.done=!1,this.delegate=null,this.method="next",this.arg=r,this.tryEntries.forEach(_),!e)for(var t in this)"t"===t.charAt(0)&&i.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=r)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function n(n,o){return s.type="throw",s.arg=e,t.next=n,o&&(t.method="next",t.arg=r),!!o}for(var o=this.tryEntries.length-1;o>=0;--o){var a=this.tryEntries[o],s=a.completion;if("root"===a.tryLoc)return n("end");if(a.tryLoc<=this.prev){var c=i.call(a,"catchLoc"),u=i.call(a,"finallyLoc");if(c&&u){if(this.prev<a.catchLoc)return n(a.catchLoc,!0);if(this.prev<a.finallyLoc)return n(a.finallyLoc)}else if(c){if(this.prev<a.catchLoc)return n(a.catchLoc,!0)}else{if(!u)throw Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return n(a.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var n=this.tryEntries[r];if(n.tryLoc<=this.prev&&i.call(n,"finallyLoc")&&this.prev<n.finallyLoc){var o=n;break}}o&&("break"===e||"continue"===e)&&o.tryLoc<=t&&t<=o.finallyLoc&&(o=null);var a=o?o.completion:{};return a.type=e,a.arg=t,o?(this.method="next",this.next=o.finallyLoc,g):this.complete(a)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),g},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),_(r),g}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if("throw"===n.type){var o=n.arg;_(r)}return o}}throw Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:N(e),resultName:t,nextLoc:n},"next"===this.method&&(this.arg=r),g}},n}function r(e,t,r,n,o,i,a){try{var s=e[i](a),c=s.value}catch(e){return void r(e)}s.done?t(c):Promise.resolve(c).then(n,o)}function n(e){return function(){var t=this,n=arguments;return new Promise((function(o,i){var a=e.apply(t,n);function s(e){r(a,o,i,s,c,"next",e)}function c(e){r(a,o,i,s,c,"throw",e)}s(void 0)}))}}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,s(n.key),n)}}function a(e,t,r){return t&&i(e.prototype,t),r&&i(e,r),Object.defineProperty(e,"prototype",{writable:!1}),e}function s(t){var r=function(t){if("object"!=e(t)||!t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!=e(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==e(r)?r:r+""}var c,u=function(){return a((function e(t){o(this,e),t&&chrome.storage.local.clear()}),[{key:"getSelectedHat",value:(p=n(t().mark((function e(){var r;return t().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,chrome.storage.local.get();case 2:if(!(r=e.sent).hat){e.next=5;break}return e.abrupt("return",r.hat);case 5:return e.abrupt("return",null);case 6:case"end":return e.stop()}}),e)}))),function(){return p.apply(this,arguments)})},{key:"getBling",value:(f=n(t().mark((function e(){var r;return t().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,chrome.storage.local.get();case 2:if(!(r=e.sent).bling){e.next=6;break}return r.bling=parseInt(r.bling),e.abrupt("return",r.bling);case 6:return e.abrupt("return",0);case 7:case"end":return e.stop()}}),e)}))),function(){return f.apply(this,arguments)})},{key:"getPlayerHealth",value:(h=n(t().mark((function e(){var r;return t().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,chrome.storage.local.get();case 2:if(!(r=e.sent).PlayerHealth){e.next=7;break}return e.abrupt("return",r.PlayerHealth);case 7:return e.abrupt("return",250);case 8:case"end":return e.stop()}}),e)}))),function(){return h.apply(this,arguments)})},{key:"addBling",value:(l=n(t().mark((function e(r){var n;return t().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,chrome.storage.local.get();case 2:return(n=e.sent).bling?(n.bling=parseInt(n.bling),n.bling+=r):n.bling=r,e.next=6,chrome.storage.local.set(n);case 6:case"end":return e.stop()}}),e)}))),function(e){return l.apply(this,arguments)})},{key:"getPlayerBullet",value:(u=n(t().mark((function e(){var r;return t().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,chrome.storage.local.get();case 2:if(!(r=e.sent).PlayerBullet){e.next=5;break}return e.abrupt("return",r.PlayerBullet);case 5:return r.PlayerBullet=1,e.next=8,chrome.storage.local.set(r);case 8:return e.abrupt("return",1);case 9:case"end":return e.stop()}}),e)}))),function(){return u.apply(this,arguments)})},{key:"getSeanBullet",value:(c=n(t().mark((function e(){var r;return t().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,chrome.storage.local.get();case 2:if(!(r=e.sent).SeanBullet){e.next=5;break}return e.abrupt("return",r.SeanBullet);case 5:return r.SeanBullet=1,e.next=8,chrome.storage.local.set(r);case 8:return e.abrupt("return",1);case 9:case"end":return e.stop()}}),e)}))),function(){return c.apply(this,arguments)})},{key:"getSeanStatus",value:(s=n(t().mark((function e(){return t().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,chrome.storage.local.get();case 2:if(!e.sent.HireSean){e.next=5;break}return e.abrupt("return",!0);case 5:return e.abrupt("return",!1);case 6:case"end":return e.stop()}}),e)}))),function(){return s.apply(this,arguments)})},{key:"subtractBling",value:(i=n(t().mark((function e(r){var n;return t().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,chrome.storage.local.get();case 2:if((n=e.sent).bling&&!(n.bling<r)){e.next=5;break}return e.abrupt("return",!1);case 5:return n.bling-=r,e.next=8,chrome.storage.local.set(n);case 8:return e.abrupt("return",!0);case 9:case"end":return e.stop()}}),e)}))),function(e){return i.apply(this,arguments)})},{key:"handleLevel",value:(r=n(t().mark((function e(r){var n;return t().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,chrome.storage.local.get();case 2:if((n=e.sent).level){e.next=5;break}return e.abrupt("return",!1);case 5:if(!(n.level<r)){e.next=7;break}return e.abrupt("return",!1);case 7:return e.abrupt("return",!0);case 8:case"end":return e.stop()}}),e)}))),function(e){return r.apply(this,arguments)})},{key:"handleAdView",value:(e=n(t().mark((function e(){var r,n,o;return t().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,chrome.storage.local.get();case 2:return(r=e.sent).rewardreset||(r.rewardreset=Date.now(),r.reward=260),(n=new Date).setTime(r.rewardreset),(o=new Date).setTime(Date.now()),n.getUTCDate()==o.getUTCDate()&&n.getUTCMonth()==o.getUTCMonth()||(r.rewardreset=Date.now(),r.reward=260),r.reward>10&&(r.reward-=10),e.next=12,chrome.storage.local.set(r);case 12:return e.next=14,this.addBling(parseInt(r.reward)+10);case 14:case"end":return e.stop()}}),e,this)}))),function(){return e.apply(this,arguments)})}]);var e,r,i,s,c,u,l,h,f,p}(),l=function(){function e(t,r,n,i){o(this,e),this.server=t,this.width=n,this.height=i,this.canvas=r,this.checkinterval=setInterval(this.checkConnection,100,this),this.keys=[],this.mousex=0,this.mousestate=!1,this.mousey=0,this.statustext="Connecting...",this.connection=new WebSocket(this.server),this.connection.addEventListener("close",this),this.connection.addEventListener("message",this),this.connection.addEventListener("open",this),this.connection.addEventListener("error",this),document.addEventListener("mousemove",this),document.addEventListener("pointerdown",this),document.addEventListener("pointerup",this),document.addEventListener("keydown",this),document.addEventListener("keyup",this)}return a(e,[{key:"socketClose",value:function(e){clearInterval(this.tick),clearInterval(this.checkinterval),this.clearListeners(),e||(this.statustext="Disconnected :(")}},{key:"checkConnection",value:function(){if(self.connection){var e=(new Date).getTime();self.connection.readyState>WebSocket.CONNECTING&&e-self.lastMessage>3e3&&(self.connection.close(),self.socketClose())}}},{key:"clearListeners",value:function(){document.removeEventListener("mousemove",this),document.removeEventListener("pointerdown",this),document.removeEventListener("pointerup",this),document.removeEventListener("keydown",this),document.removeEventListener("keyup",this)}},{key:"draw",value:function(e){var t=this.canvas.getContext("2d");for(var r in t.clearRect(0,0,this.width,this.height),e){var n=e[r];if("text"==n.type&&(t.font="18px Times New Roman",t.textAlign="center",t.textBaseline="middle",t.fillStyle="#8aea92",t.fillText(n.text,n.x,n.y)),t.fillStyle=n.fillStyle,"rectangle"==n.type&&t.fillRect(n.x,n.y,n.width,n.height),"circle"==n.type&&(t.beginPath(),t.arc(n.x,n.y,n.radius,0,360,!1),t.closePath(),t.fill()),"texture"==n.shape){var o=new Image(n.width,n.height);o.src=n.texture,t.drawImage(o,n.x,n.y)}}}},{key:"statustext",set:function(e){this._statustext=e;var t=this.canvas.getContext("2d");t.clearRect(0,0,this.width,this.height),t.font="18px Times New Roman",t.textAlign="center",t.textBaseline="middle",t.fillStyle="#8aea92",t.fillText(e,this.width/2,this.height/2)}},{key:"reconnect",value:function(t){c=new e(t.server,t.canvas,t.width,t.height)}},{key:"recieveUpdate",value:function(e){"frame"==e.type&&this.draw(e.data),"kick"==e.type&&(this.statustext=e.reason,this.clearListeners()),"reconnect"==e.type&&(setTimeout(this.reconnect,e.time,this),this.socketClose(!0),this.connection.close(),this.connection.removeEventListener("close",this),this.connection.removeEventListener("message",this),this.connection.removeEventListener("open",this),this.connection.removeEventListener("error",this),this.statustext="Reconnecting...")}},{key:"handleEvent",value:function(e){if("pointerdown"==e.type&&(this.mousestate=!0),"pointerup"==e.type&&(this.mousestate=!1),"mousemove"==e.type){var t=this.canvas.getBoundingClientRect();this.mousex=e.clientX-t.left,this.mousey=e.clientY-t.top}if("message"==e.type&&(this.recieveUpdate(JSON.parse(e.data)),this.lastMessage=(new Date).getTime()),"open"==e.type&&(this.statustext="",this.tick=setInterval(this.sendUpdate,1e3/60,this)),"close"==e.type&&this.socketClose(),"error"==e.type&&this.socketClose(),"keydown"==e.type&&-1==this.keys.indexOf(e.key)&&this.keys.push(e.key),"keyup"==e.type){var r=this.keys.indexOf(e.key);r>-1&&this.keys.splice(r,1)}}},{key:"sendUpdate",value:function(e){var t={Keys:e.keys,MousePos:{X:e.mousex,Y:e.mousey},MouseState:e.mousestate};e.connection.send(JSON.stringify(t))}}])}();window.addEventListener("load",(function(){chrome.action.setPopup({popup:"popup.html"}),new u(!1);var e=document.createElement("canvas");e.id="canvas",document.body.appendChild(e),e.width=400,e.height=300,c=new l("ws://127.0.0.1:690",e,400,300),this.window.networkingclient=c}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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T3FJLE9BQU9DLFNBQVMsQ0FBQ0MsTUFBTSxlQUNoQixJQUFJeEksR0FBWSxHQUM5QixJQUFJc0QsRUFBU2EsU0FBU3NFLGNBQWMsVUFDcENuRixFQUFPb0YsR0FBSyxTQUNadkUsU0FBU3dFLEtBQUtDLFlBQVl0RixHQUMxQkEsRUFBT0MsTUFBUSxJQUNmRCxFQUFPRSxPQUFTLElBQ2hCekQsRUFBbUIsSUFBSXFELEVBQWlCLHFCQUFzQkUsRUFBUSxJQUFLLEtBQzNFSixLQUFLbUYsT0FBT3RJLGlCQUFtQkEsQ0FDbkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zZWFuZ2FtZS8uL3NyYy9tdWx0aXBsYXllci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgcmVuZGVyZXJcbmxldCBwbGF5ZXJcbmxldCBvYnN0YWNsZVxubGV0IHNlYW5cbmxldCBrZXloYW5kbGVyXG5sZXQgZGF0YWhhbmRsZXJcbmxldCBuZXR3b3JraW5nY2xpZW50XG5sZXQgYm9zc1xubGV0IGFiaGluYXZcbmxldCBHQU1FTU9ERVxuY2xhc3MgRGF0YUhhbmRsZXIge1xuICAgIGNvbnN0cnVjdG9yKHJlc2V0KSB7XG4gICAgICAgIGlmIChyZXNldCl7XG4gICAgICAgICAgICBjaHJvbWUuc3RvcmFnZS5sb2NhbC5jbGVhcigpXG4gICAgICAgIH1cbiAgICB9XG4gICAgYXN5bmMgZ2V0U2VsZWN0ZWRIYXQoKSB7XG4gICAgICAgIGxldCBkYXRhID0gYXdhaXQgY2hyb21lLnN0b3JhZ2UubG9jYWwuZ2V0KClcbiAgICAgICAgaWYgKGRhdGFbXCJoYXRcIl0pIHtcbiAgICAgICAgICAgIHJldHVybiBkYXRhW1wiaGF0XCJdXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG51bGxcbiAgICB9XG4gICAgYXN5bmMgZ2V0QmxpbmcoKSB7XG4gICAgICAgIGxldCBkYXRhID0gYXdhaXQgY2hyb21lLnN0b3JhZ2UubG9jYWwuZ2V0KClcbiAgICAgICAgaWYgKGRhdGFbXCJibGluZ1wiXSkge1xuICAgICAgICAgICAgZGF0YVtcImJsaW5nXCJdID0gcGFyc2VJbnQoZGF0YVtcImJsaW5nXCJdKVxuICAgICAgICAgICAgcmV0dXJuIGRhdGFbXCJibGluZ1wiXVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiAwO1xuICAgIH1cbiAgICBhc3luYyBnZXRQbGF5ZXJIZWFsdGgoKSB7XG4gICAgICAgIGxldCBkYXRhID0gYXdhaXQgY2hyb21lLnN0b3JhZ2UubG9jYWwuZ2V0KClcbiAgICAgICAgaWYgKGRhdGFbXCJQbGF5ZXJIZWFsdGhcIl0pe1xuICAgICAgICAgICAgcmV0dXJuIGRhdGFbXCJQbGF5ZXJIZWFsdGhcIl1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiAyNTBcbiAgICAgICAgfVxuICAgIH1cbiAgICBhc3luYyBhZGRCbGluZyhhbW91bnQpIHtcbiAgICAgICAgbGV0IGRhdGEgPSBhd2FpdCBjaHJvbWUuc3RvcmFnZS5sb2NhbC5nZXQoKVxuICAgICAgICBpZiAoZGF0YVtcImJsaW5nXCJdKXtcbiAgICAgICAgICAgIGRhdGFbXCJibGluZ1wiXSA9IHBhcnNlSW50KGRhdGFbXCJibGluZ1wiXSlcbiAgICAgICAgICAgIGRhdGFbXCJibGluZ1wiXSArPSBhbW91bnRcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGRhdGFbXCJibGluZ1wiXSA9IGFtb3VudFxuICAgICAgICB9XG4gICAgICAgIGF3YWl0IGNocm9tZS5zdG9yYWdlLmxvY2FsLnNldChkYXRhKVxuICAgIH1cbiAgICBhc3luYyBnZXRQbGF5ZXJCdWxsZXQoKSB7XG4gICAgICAgIGxldCBkYXRhID0gYXdhaXQgY2hyb21lLnN0b3JhZ2UubG9jYWwuZ2V0KClcbiAgICAgICAgaWYgKGRhdGFbXCJQbGF5ZXJCdWxsZXRcIl0pIHtcbiAgICAgICAgICAgIHJldHVybiBkYXRhW1wiUGxheWVyQnVsbGV0XCJdXG4gICAgICAgIH1cbiAgICAgICAgZGF0YVtcIlBsYXllckJ1bGxldFwiXSA9IDFcbiAgICAgICAgYXdhaXQgY2hyb21lLnN0b3JhZ2UubG9jYWwuc2V0KGRhdGEpXG4gICAgICAgIHJldHVybiAxXG4gICAgfVxuICAgIGFzeW5jIGdldFNlYW5CdWxsZXQoKSB7XG4gICAgICAgIGxldCBkYXRhID0gYXdhaXQgY2hyb21lLnN0b3JhZ2UubG9jYWwuZ2V0KClcbiAgICAgICAgaWYgKGRhdGFbXCJTZWFuQnVsbGV0XCJdKSB7XG4gICAgICAgICAgICByZXR1cm4gZGF0YVtcIlNlYW5CdWxsZXRcIl1cbiAgICAgICAgfVxuICAgICAgICBkYXRhW1wiU2VhbkJ1bGxldFwiXSA9IDFcbiAgICAgICAgYXdhaXQgY2hyb21lLnN0b3JhZ2UubG9jYWwuc2V0KGRhdGEpXG4gICAgICAgIHJldHVybiAxXG4gICAgfVxuICAgIGFzeW5jIGdldFNlYW5TdGF0dXMoKSB7XG4gICAgICAgIGxldCBkYXRhID0gYXdhaXQgY2hyb21lLnN0b3JhZ2UubG9jYWwuZ2V0KClcbiAgICAgICAgaWYgKGRhdGFbXCJIaXJlU2VhblwiXSkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWVcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2VcbiAgICB9XG4gICAgYXN5bmMgc3VidHJhY3RCbGluZyhhbW91bnQpIHtcbiAgICAgICAgbGV0IGRhdGEgPSBhd2FpdCBjaHJvbWUuc3RvcmFnZS5sb2NhbC5nZXQoKVxuICAgICAgICBpZiAoIWRhdGFbXCJibGluZ1wiXSB8fCBkYXRhW1wiYmxpbmdcIl0gPCBhbW91bnQpe1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlXG4gICAgICAgIH1cbiAgICAgICAgZGF0YVtcImJsaW5nXCJdIC09IGFtb3VudFxuICAgICAgICBhd2FpdCBjaHJvbWUuc3RvcmFnZS5sb2NhbC5zZXQoZGF0YSlcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG4gICAgYXN5bmMgaGFuZGxlTGV2ZWwobGV2ZWwpIHtcbiAgICAgICAgbGV0IGRhdGEgPSBhd2FpdCBjaHJvbWUuc3RvcmFnZS5sb2NhbC5nZXQoKVxuICAgICAgICBpZiAoIWRhdGFbXCJsZXZlbFwiXSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlXG4gICAgICAgIH1cbiAgICAgICAgaWYgKGRhdGFbXCJsZXZlbFwiXSA8IGxldmVsKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2VcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgIH1cbiAgICBhc3luYyBoYW5kbGVBZFZpZXcoKSB7XG4gICAgICAgIGxldCBkYXRhID0gYXdhaXQgY2hyb21lLnN0b3JhZ2UubG9jYWwuZ2V0KClcblxuICAgICAgICBpZiAoIWRhdGFbXCJyZXdhcmRyZXNldFwiXSkge1xuICAgICAgICAgICAgZGF0YVtcInJld2FyZHJlc2V0XCJdID0gRGF0ZS5ub3coKVxuICAgICAgICAgICAgZGF0YVtcInJld2FyZFwiXSA9IDI2MFxuICAgICAgICB9XG5cbiAgICAgICAgbGV0IGxhc3RyZXNldCA9IG5ldyBEYXRlKClcbiAgICAgICAgbGFzdHJlc2V0LnNldFRpbWUoZGF0YVtcInJld2FyZHJlc2V0XCJdKVxuICAgICAgICBsZXQgbm93ID0gbmV3IERhdGUoKVxuICAgICAgICBub3cuc2V0VGltZShEYXRlLm5vdygpKVxuXG4gICAgICAgIGlmIChsYXN0cmVzZXQuZ2V0VVRDRGF0ZSgpICE9IG5vdy5nZXRVVENEYXRlKCkgfHwgbGFzdHJlc2V0LmdldFVUQ01vbnRoKCkgIT0gbm93LmdldFVUQ01vbnRoKCkpIHtcbiAgICAgICAgICAgIGRhdGFbXCJyZXdhcmRyZXNldFwiXSA9IERhdGUubm93KClcbiAgICAgICAgICAgIGRhdGFbXCJyZXdhcmRcIl0gPSAyNjBcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChkYXRhW1wicmV3YXJkXCJdID4gMTApIHtcbiAgICAgICAgICAgIGRhdGFbXCJyZXdhcmRcIl0gLT0gMTBcbiAgICAgICAgfVxuICAgICAgICBhd2FpdCBjaHJvbWUuc3RvcmFnZS5sb2NhbC5zZXQoZGF0YSlcbiAgICAgICAgYXdhaXQgdGhpcy5hZGRCbGluZyhwYXJzZUludChkYXRhW1wicmV3YXJkXCJdKSArIDEwKVxuICAgIH1cbn1cbmNsYXNzIE5ldHdvcmtpbmdDbGllbnQge1xuICAgIGNvbnN0cnVjdG9yKHNlcnZlciwgY2FudmFzLCB3aWR0aCwgaGVpZ2h0KSB7XG4gICAgICAgIHRoaXMuc2VydmVyID0gc2VydmVyXG5cbiAgICAgICAgdGhpcy53aWR0aCA9IHdpZHRoXG4gICAgICAgIHRoaXMuaGVpZ2h0ID0gaGVpZ2h0XG4gICAgICAgIHRoaXMuY2FudmFzID0gY2FudmFzXG4gICAgICAgIHRoaXMuY2hlY2tpbnRlcnZhbCA9IHNldEludGVydmFsKHRoaXMuY2hlY2tDb25uZWN0aW9uLCAxMDAsIHRoaXMpXG4gICAgICAgIHRoaXMua2V5cyA9IFtdXG4gICAgICAgIHRoaXMubW91c2V4ID0gMFxuICAgICAgICB0aGlzLm1vdXNlc3RhdGUgPSBmYWxzZVxuICAgICAgICB0aGlzLm1vdXNleSA9IDBcblxuICAgICAgICB0aGlzLnN0YXR1c3RleHQgPSBcIkNvbm5lY3RpbmcuLi5cIlxuXG4gICAgICAgIHRoaXMuY29ubmVjdGlvbiA9IG5ldyBXZWJTb2NrZXQodGhpcy5zZXJ2ZXIpXG5cbiAgICAgICAgdGhpcy5jb25uZWN0aW9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbG9zZVwiLCB0aGlzKVxuICAgICAgICB0aGlzLmNvbm5lY3Rpb24uYWRkRXZlbnRMaXN0ZW5lcihcIm1lc3NhZ2VcIiwgdGhpcylcbiAgICAgICAgdGhpcy5jb25uZWN0aW9uLmFkZEV2ZW50TGlzdGVuZXIoXCJvcGVuXCIsIHRoaXMpXG4gICAgICAgIHRoaXMuY29ubmVjdGlvbi5hZGRFdmVudExpc3RlbmVyKFwiZXJyb3JcIiwgdGhpcylcblxuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vtb3ZlXCIsdGhpcylcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInBvaW50ZXJkb3duXCIsdGhpcylcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInBvaW50ZXJ1cFwiLCB0aGlzKVxuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLHRoaXMpXG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXl1cFwiLHRoaXMpXG4gICAgfVxuICAgIHNvY2tldENsb3NlKHNhdmVTdGF0dXMpIHtcbiAgICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLnRpY2spXG4gICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5jaGVja2ludGVydmFsKVxuICAgICAgICB0aGlzLmNsZWFyTGlzdGVuZXJzKClcbiAgICAgICAgaWYgKCFzYXZlU3RhdHVzKSB7XG4gICAgICAgICAgICB0aGlzLnN0YXR1c3RleHQgPSBcIkRpc2Nvbm5lY3RlZCA6KFwiXG4gICAgICAgIH1cbiAgICB9XG4gICAgY2hlY2tDb25uZWN0aW9uICgpIHtcbiAgICAgICAgaWYgKCFzZWxmLmNvbm5lY3Rpb24pIHtcbiAgICAgICAgICAgIHJldHVyblxuICAgICAgICB9XG4gICAgICAgIGxldCBUaW1lID0gbmV3IERhdGUoKS5nZXRUaW1lKClcbiAgICAgICAgaWYgKHNlbGYuY29ubmVjdGlvbi5yZWFkeVN0YXRlID4gV2ViU29ja2V0LkNPTk5FQ1RJTkcgJiYgKFRpbWUgLSBzZWxmLmxhc3RNZXNzYWdlID4gMzAwMCkpIHtcbiAgICAgICAgICAgIHNlbGYuY29ubmVjdGlvbi5jbG9zZSgpXG4gICAgICAgICAgICBzZWxmLnNvY2tldENsb3NlKClcbiAgICAgICAgfVxuICAgIH1cbiAgICBjbGVhckxpc3RlbmVycygpIHtcbiAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm1vdXNlbW92ZVwiLHRoaXMpXG4gICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJwb2ludGVyZG93blwiLHRoaXMpXG4gICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJwb2ludGVydXBcIiwgdGhpcylcbiAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIix0aGlzKVxuICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5dXBcIix0aGlzKVxuICAgIH1cbiAgICBkcmF3KGRhdGEpIHtcbiAgICAgICAgY29uc3QgY29udGV4dCA9IHRoaXMuY2FudmFzLmdldENvbnRleHQoXCIyZFwiKVxuICAgICAgICBjb250ZXh0LmNsZWFyUmVjdCgwLDAsdGhpcy53aWR0aCx0aGlzLmhlaWdodClcbiAgICAgICAgZm9yIChsZXQga2V5IGluIGRhdGEpIHtcbiAgICAgICAgICAgIGxldCBvYmplY3QgPSBkYXRhW2tleV1cbiAgICAgICAgICAgIGlmIChvYmplY3QudHlwZSA9PSBcInRleHRcIil7XG4gICAgICAgICAgICAgICAgY29udGV4dC5mb250ID0gXCIxOHB4IFRpbWVzIE5ldyBSb21hblwiXG4gICAgICAgICAgICAgICAgY29udGV4dC50ZXh0QWxpZ24gPSBcImNlbnRlclwiXG4gICAgICAgICAgICAgICAgY29udGV4dC50ZXh0QmFzZWxpbmUgPSBcIm1pZGRsZVwiXG4gICAgICAgICAgICAgICAgY29udGV4dC5maWxsU3R5bGUgPSBcIiM4YWVhOTJcIlxuICAgICAgICAgICAgICAgIGNvbnRleHQuZmlsbFRleHQob2JqZWN0LnRleHQsb2JqZWN0Lngsb2JqZWN0LnkpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb250ZXh0LmZpbGxTdHlsZSA9IG9iamVjdC5maWxsU3R5bGVcbiAgICAgICAgICAgIGlmIChvYmplY3QudHlwZSA9PSBcInJlY3RhbmdsZVwiKXtcbiAgICAgICAgICAgICAgICBjb250ZXh0LmZpbGxSZWN0KG9iamVjdC54LG9iamVjdC55LG9iamVjdC53aWR0aCxvYmplY3QuaGVpZ2h0KVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG9iamVjdC50eXBlID09IFwiY2lyY2xlXCIpe1xuICAgICAgICAgICAgICAgIGNvbnRleHQuYmVnaW5QYXRoKClcbiAgICAgICAgICAgICAgICBjb250ZXh0LmFyYyhvYmplY3QueCxvYmplY3QueSxvYmplY3QucmFkaXVzLDAsMzYwLGZhbHNlKVxuICAgICAgICAgICAgICAgIGNvbnRleHQuY2xvc2VQYXRoKClcbiAgICAgICAgICAgICAgICBjb250ZXh0LmZpbGwoKVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG9iamVjdC5zaGFwZSA9PSBcInRleHR1cmVcIikge1xuICAgICAgICAgICAgICAgIGxldCBpbWcgPSBuZXcgSW1hZ2Uob2JqZWN0LndpZHRoLG9iamVjdC5oZWlnaHQpXG4gICAgICAgICAgICAgICAgaW1nLnNyYyA9IG9iamVjdC50ZXh0dXJlXG4gICAgICAgICAgICAgICAgY29udGV4dC5kcmF3SW1hZ2UoaW1nLG9iamVjdC54LG9iamVjdC55KVxuICAgICAgICAgICAgfVxuICAgICAgICB9IFxuICAgIH1cbiAgICBzZXQgc3RhdHVzdGV4dCh2YWx1ZSkge1xuICAgICAgICB0aGlzLl9zdGF0dXN0ZXh0ID0gdmFsdWVcbiAgICAgICAgY29uc3QgY29udGV4dCA9IHRoaXMuY2FudmFzLmdldENvbnRleHQoXCIyZFwiKVxuICAgICAgICBjb250ZXh0LmNsZWFyUmVjdCgwLDAsdGhpcy53aWR0aCx0aGlzLmhlaWdodClcbiAgICAgICAgY29udGV4dC5mb250ID0gXCIxOHB4IFRpbWVzIE5ldyBSb21hblwiXG4gICAgICAgIGNvbnRleHQudGV4dEFsaWduID0gXCJjZW50ZXJcIlxuICAgICAgICBjb250ZXh0LnRleHRCYXNlbGluZSA9IFwibWlkZGxlXCJcbiAgICAgICAgY29udGV4dC5maWxsU3R5bGUgPSBcIiM4YWVhOTJcIlxuICAgICAgICBjb250ZXh0LmZpbGxUZXh0KHZhbHVlLHRoaXMud2lkdGgvMix0aGlzLmhlaWdodC8yKVxuICAgICAgICBcbiAgICB9XG5cbiAgICByZWNvbm5lY3Qoc2VsZikge1xuICAgICAgICBuZXR3b3JraW5nY2xpZW50ID0gbmV3IE5ldHdvcmtpbmdDbGllbnQoc2VsZi5zZXJ2ZXIsIHNlbGYuY2FudmFzLCBzZWxmLndpZHRoLCBzZWxmLmhlaWdodClcbiAgICB9XG5cbiAgICByZWNpZXZlVXBkYXRlKHJlcXVlc3QpIHtcbiAgICAgICAgaWYgKHJlcXVlc3QudHlwZSA9PSBcImZyYW1lXCIpIHtcbiAgICAgICAgICAgIHRoaXMuZHJhdyhyZXF1ZXN0LmRhdGEpXG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJlcXVlc3QudHlwZSA9PSBcImtpY2tcIikge1xuICAgICAgICAgICAgdGhpcy5zdGF0dXN0ZXh0ID0gcmVxdWVzdC5yZWFzb25cbiAgICAgICAgICAgIHRoaXMuY2xlYXJMaXN0ZW5lcnMoKVxuICAgICAgICB9XG4gICAgICAgIGlmIChyZXF1ZXN0LnR5cGUgPT0gXCJyZWNvbm5lY3RcIikge1xuICAgICAgICAgICAgc2V0VGltZW91dCh0aGlzLnJlY29ubmVjdCwgcmVxdWVzdC50aW1lLCB0aGlzKVxuICAgICAgICAgICAgdGhpcy5zb2NrZXRDbG9zZSh0cnVlKVxuICAgICAgICAgICAgdGhpcy5jb25uZWN0aW9uLmNsb3NlKClcbiAgICAgICAgICAgIHRoaXMuY29ubmVjdGlvbi5yZW1vdmVFdmVudExpc3RlbmVyKFwiY2xvc2VcIiwgdGhpcylcbiAgICAgICAgICAgIHRoaXMuY29ubmVjdGlvbi5yZW1vdmVFdmVudExpc3RlbmVyKFwibWVzc2FnZVwiLCB0aGlzKVxuICAgICAgICAgICAgdGhpcy5jb25uZWN0aW9uLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJvcGVuXCIsIHRoaXMpXG4gICAgICAgICAgICB0aGlzLmNvbm5lY3Rpb24ucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImVycm9yXCIsIHRoaXMpXG4gICAgICAgICAgICB0aGlzLnN0YXR1c3RleHQgPSBcIlJlY29ubmVjdGluZy4uLlwiXG4gICAgICAgIH1cbiAgICB9XG4gICAgaGFuZGxlRXZlbnQoZXYpIHtcbiAgICAgICAgaWYgKGV2LnR5cGUgPT0gXCJwb2ludGVyZG93blwiKSB7XG4gICAgICAgICAgICB0aGlzLm1vdXNlc3RhdGUgPSB0cnVlXG4gICAgICAgIH1cbiAgICAgICAgaWYgKGV2LnR5cGUgPT0gXCJwb2ludGVydXBcIikge1xuICAgICAgICAgICAgdGhpcy5tb3VzZXN0YXRlID0gZmFsc2VcbiAgICAgICAgfVxuICAgICAgICBpZiAoZXYudHlwZSA9PSBcIm1vdXNlbW92ZVwiKSB7XG4gICAgICAgICAgICBjb25zdCBjYW52YXMgPSB0aGlzLmNhbnZhc1xuICAgICAgICAgICAgY29uc3QgcmVjdCA9IGNhbnZhcy5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKVxuICAgICAgICAgICAgdGhpcy5tb3VzZXggPSBldi5jbGllbnRYIC0gcmVjdC5sZWZ0XG4gICAgICAgICAgICB0aGlzLm1vdXNleSA9IGV2LmNsaWVudFkgLSByZWN0LnRvcFxuICAgICAgICB9XG4gICAgICAgIGlmIChldi50eXBlID09IFwibWVzc2FnZVwiKSB7XG4gICAgICAgICAgICB0aGlzLnJlY2lldmVVcGRhdGUoSlNPTi5wYXJzZShldi5kYXRhKSlcbiAgICAgICAgICAgIHRoaXMubGFzdE1lc3NhZ2UgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKVxuICAgICAgICB9XG4gICAgICAgIGlmIChldi50eXBlID09IFwib3BlblwiKSB7XG4gICAgICAgICAgICB0aGlzLnN0YXR1c3RleHQgPSBcIlwiXG4gICAgICAgICAgICB0aGlzLnRpY2sgPSBzZXRJbnRlcnZhbCh0aGlzLnNlbmRVcGRhdGUsIDEwMDAvNjAsIHRoaXMpXG4gICAgICAgIH1cbiAgICAgICAgaWYgKGV2LnR5cGUgPT0gXCJjbG9zZVwiKSB7XG4gICAgICAgICAgICB0aGlzLnNvY2tldENsb3NlKClcbiAgICAgICAgfVxuICAgICAgICBpZiAoZXYudHlwZSA9PSBcImVycm9yXCIpIHtcbiAgICAgICAgICAgIHRoaXMuc29ja2V0Q2xvc2UoKVxuICAgICAgICB9XG4gICAgICAgIGlmIChldi50eXBlID09IFwia2V5ZG93blwiKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5rZXlzLmluZGV4T2YoZXYua2V5KSA9PSAtMSkge1xuICAgICAgICAgICAgICAgIHRoaXMua2V5cy5wdXNoKGV2LmtleSkgICBcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoZXYudHlwZSA9PSBcImtleXVwXCIpIHtcbiAgICAgICAgICAgIGxldCBpbmRleCA9IHRoaXMua2V5cy5pbmRleE9mKGV2LmtleSlcbiAgICAgICAgICAgIGlmIChpbmRleCA+IC0xKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5rZXlzLnNwbGljZShpbmRleCwxKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHNlbmRVcGRhdGUoc2VsZikge1xuICAgICAgICBsZXQgSW5wdXQgPSB7XG4gICAgICAgICAgICBLZXlzOiBzZWxmLmtleXMsXG4gICAgICAgICAgICBNb3VzZVBvczoge1g6IHNlbGYubW91c2V4LCBZOiBzZWxmLm1vdXNleX0sXG4gICAgICAgICAgICBNb3VzZVN0YXRlOiBzZWxmLm1vdXNlc3RhdGVcbiAgICAgICAgfVxuICAgICAgICBzZWxmLmNvbm5lY3Rpb24uc2VuZChKU09OLnN0cmluZ2lmeShJbnB1dCkpXG4gICAgfVxufVxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsIGZ1bmN0aW9uICgpe1xuICAgIGNocm9tZS5hY3Rpb24uc2V0UG9wdXAoe3BvcHVwOlwicG9wdXAuaHRtbFwifSlcbiAgICBkYXRhaGFuZGxlciA9IG5ldyBEYXRhSGFuZGxlcihmYWxzZSlcbiAgICBsZXQgY2FudmFzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImNhbnZhc1wiKVxuICAgIGNhbnZhcy5pZCA9IFwiY2FudmFzXCJcbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGNhbnZhcylcbiAgICBjYW52YXMud2lkdGggPSA0MDBcbiAgICBjYW52YXMuaGVpZ2h0ID0gMzAwXG4gICAgbmV0d29ya2luZ2NsaWVudCA9IG5ldyBOZXR3b3JraW5nQ2xpZW50KFwid3M6Ly8xMjcuMC4wLjE6NjkwXCIsIGNhbnZhcywgNDAwLCAzMDApXG4gICAgdGhpcy53aW5kb3cubmV0d29ya2luZ2NsaWVudCA9IG5ldHdvcmtpbmdjbGllbnRcbn0pIl0sIm5hbWVzIjpbIl9yZWdlbmVyYXRvclJ1bnRpbWUiLCJlIiwidCIsInIiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJuIiwiaGFzT3duUHJvcGVydHkiLCJvIiwiZGVmaW5lUHJvcGVydHkiLCJ2YWx1ZSIsImkiLCJTeW1ib2wiLCJhIiwiaXRlcmF0b3IiLCJjIiwiYXN5bmNJdGVyYXRvciIsInUiLCJ0b1N0cmluZ1RhZyIsImRlZmluZSIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsIndyYXAiLCJHZW5lcmF0b3IiLCJjcmVhdGUiLCJDb250ZXh0IiwibWFrZUludm9rZU1ldGhvZCIsInRyeUNhdGNoIiwidHlwZSIsImFyZyIsImNhbGwiLCJoIiwibCIsImYiLCJzIiwieSIsIkdlbmVyYXRvckZ1bmN0aW9uIiwiR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUiLCJwIiwiZCIsImdldFByb3RvdHlwZU9mIiwidiIsInZhbHVlcyIsImciLCJkZWZpbmVJdGVyYXRvck1ldGhvZHMiLCJmb3JFYWNoIiwiX2ludm9rZSIsIkFzeW5jSXRlcmF0b3IiLCJpbnZva2UiLCJfdHlwZW9mIiwicmVzb2x2ZSIsIl9fYXdhaXQiLCJ0aGVuIiwiY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmciLCJFcnJvciIsImRvbmUiLCJtZXRob2QiLCJkZWxlZ2F0ZSIsIm1heWJlSW52b2tlRGVsZWdhdGUiLCJzZW50IiwiX3NlbnQiLCJkaXNwYXRjaEV4Y2VwdGlvbiIsImFicnVwdCIsIlR5cGVFcnJvciIsInJlc3VsdE5hbWUiLCJuZXh0IiwibmV4dExvYyIsInB1c2hUcnlFbnRyeSIsInRyeUxvYyIsImNhdGNoTG9jIiwiZmluYWxseUxvYyIsImFmdGVyTG9jIiwidHJ5RW50cmllcyIsInB1c2giLCJyZXNldFRyeUVudHJ5IiwiY29tcGxldGlvbiIsInJlc2V0IiwiaXNOYU4iLCJsZW5ndGgiLCJkaXNwbGF5TmFtZSIsImlzR2VuZXJhdG9yRnVuY3Rpb24iLCJjb25zdHJ1Y3RvciIsIm5hbWUiLCJtYXJrIiwic2V0UHJvdG90eXBlT2YiLCJfX3Byb3RvX18iLCJhd3JhcCIsImFzeW5jIiwiUHJvbWlzZSIsImtleXMiLCJyZXZlcnNlIiwicG9wIiwicHJldiIsImNoYXJBdCIsInNsaWNlIiwic3RvcCIsInJ2YWwiLCJoYW5kbGUiLCJjb21wbGV0ZSIsImZpbmlzaCIsImRlbGVnYXRlWWllbGQiLCJhc3luY0dlbmVyYXRvclN0ZXAiLCJfYXN5bmNUb0dlbmVyYXRvciIsImFyZ3VtZW50cyIsImFwcGx5IiwiX25leHQiLCJfdGhyb3ciLCJfY2xhc3NDYWxsQ2hlY2siLCJfZGVmaW5lUHJvcGVydGllcyIsIl90b1Byb3BlcnR5S2V5Iiwia2V5IiwiX2NyZWF0ZUNsYXNzIiwidG9QcmltaXRpdmUiLCJTdHJpbmciLCJfdG9QcmltaXRpdmUiLCJuZXR3b3JraW5nY2xpZW50IiwiRGF0YUhhbmRsZXIiLCJjaHJvbWUiLCJzdG9yYWdlIiwibG9jYWwiLCJjbGVhciIsIl9nZXRTZWxlY3RlZEhhdCIsIl9jYWxsZWUiLCJkYXRhIiwiX2NvbnRleHQiLCJnZXQiLCJfZ2V0QmxpbmciLCJfY2FsbGVlMiIsIl9jb250ZXh0MiIsInBhcnNlSW50IiwiX2dldFBsYXllckhlYWx0aCIsIl9jYWxsZWUzIiwiX2NvbnRleHQzIiwiX2FkZEJsaW5nIiwiX2NhbGxlZTQiLCJhbW91bnQiLCJfY29udGV4dDQiLCJzZXQiLCJfeCIsIl9nZXRQbGF5ZXJCdWxsZXQiLCJfY2FsbGVlNSIsIl9jb250ZXh0NSIsIl9nZXRTZWFuQnVsbGV0IiwiX2NhbGxlZTYiLCJfY29udGV4dDYiLCJfZ2V0U2VhblN0YXR1cyIsIl9jYWxsZWU3IiwiX2NvbnRleHQ3IiwiX3N1YnRyYWN0QmxpbmciLCJfY2FsbGVlOCIsIl9jb250ZXh0OCIsIl94MiIsIl9oYW5kbGVMZXZlbCIsIl9jYWxsZWU5IiwibGV2ZWwiLCJfY29udGV4dDkiLCJfeDMiLCJfaGFuZGxlQWRWaWV3IiwiX2NhbGxlZTEwIiwibGFzdHJlc2V0Iiwibm93IiwiX2NvbnRleHQxMCIsIkRhdGUiLCJzZXRUaW1lIiwiZ2V0VVRDRGF0ZSIsImdldFVUQ01vbnRoIiwidGhpcyIsImFkZEJsaW5nIiwiTmV0d29ya2luZ0NsaWVudCIsInNlcnZlciIsImNhbnZhcyIsIndpZHRoIiwiaGVpZ2h0IiwiY2hlY2tpbnRlcnZhbCIsInNldEludGVydmFsIiwiY2hlY2tDb25uZWN0aW9uIiwibW91c2V4IiwibW91c2VzdGF0ZSIsIm1vdXNleSIsInN0YXR1c3RleHQiLCJjb25uZWN0aW9uIiwiV2ViU29ja2V0IiwiYWRkRXZlbnRMaXN0ZW5lciIsImRvY3VtZW50Iiwic2F2ZVN0YXR1cyIsImNsZWFySW50ZXJ2YWwiLCJ0aWNrIiwiY2xlYXJMaXN0ZW5lcnMiLCJzZWxmIiwiVGltZSIsImdldFRpbWUiLCJyZWFkeVN0YXRlIiwiQ09OTkVDVElORyIsImxhc3RNZXNzYWdlIiwiY2xvc2UiLCJzb2NrZXRDbG9zZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJjb250ZXh0IiwiZ2V0Q29udGV4dCIsImNsZWFyUmVjdCIsIm9iamVjdCIsImZvbnQiLCJ0ZXh0QWxpZ24iLCJ0ZXh0QmFzZWxpbmUiLCJmaWxsU3R5bGUiLCJmaWxsVGV4dCIsInRleHQiLCJ4IiwiZmlsbFJlY3QiLCJiZWdpblBhdGgiLCJhcmMiLCJyYWRpdXMiLCJjbG9zZVBhdGgiLCJmaWxsIiwic2hhcGUiLCJpbWciLCJJbWFnZSIsInNyYyIsInRleHR1cmUiLCJkcmF3SW1hZ2UiLCJfc3RhdHVzdGV4dCIsInJlcXVlc3QiLCJkcmF3IiwicmVhc29uIiwic2V0VGltZW91dCIsInJlY29ubmVjdCIsInRpbWUiLCJldiIsInJlY3QiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJjbGllbnRYIiwibGVmdCIsImNsaWVudFkiLCJ0b3AiLCJyZWNpZXZlVXBkYXRlIiwiSlNPTiIsInBhcnNlIiwic2VuZFVwZGF0ZSIsImluZGV4T2YiLCJpbmRleCIsInNwbGljZSIsIklucHV0IiwiS2V5cyIsIk1vdXNlUG9zIiwiWCIsIlkiLCJNb3VzZVN0YXRlIiwic2VuZCIsInN0cmluZ2lmeSIsIndpbmRvdyIsImFjdGlvbiIsInNldFBvcHVwIiwicG9wdXAiLCJjcmVhdGVFbGVtZW50IiwiaWQiLCJib2R5IiwiYXBwZW5kQ2hpbGQiXSwic291cmNlUm9vdCI6IiJ9